{"ast":null,"code":"var _jsxFileName = \"C:\\\\my-react\\\\src\\\\page\\\\Modal1.js\";\nimport React from 'react';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\n\n// export const Modal1 = ({open, setOpen}) => {\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Modal1 = props => {\n  const {\n    open,\n    setOpen\n  } = props;\n  const close = () => {\n    setOpen(false);\n  };\n  /*\r\n      const [names, setName] = useState(['']);\r\n      const [input, setInput] = useState('');\r\n      const [input2, setInput2] = useState('');\r\n  \r\n      const handleInputchange = (e) => {\r\n          setInput(e.target.value)\r\n      }\r\n  \r\n      const handleInputchange2 =(e) => {\r\n          setInput2(e.target.value)\r\n          }\r\n  \r\n      const handleUpload = () => {\r\n          setName(() => {\r\n              return [input];\r\n          })\r\n      }\r\n      console.log(input);\r\n      return (\r\n      <Modal isOpen={open}>\r\n          <p>제목</p>\r\n          <input type=\"text\" value={input} onChange = {handleInputchange}></input> \r\n          <p>내용</p>\r\n          <input type=\"text\" value={input2} onChange = {handleInputchange2}></input> \r\n          < button onClick= {() => {handleInputchange(); handleInputchange2();}}>Upload</button>\r\n          {names.map((name, idx) => { \r\n              return <p key={idx}>{name}</p>\r\n          })}\r\n          <button onClick={close}>X</button>\r\n      </Modal>\r\n    )\r\n  }*/\n\n  console.log(input);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: open,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC81C\\uBAA9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB0B4\\uC6A9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \" Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), names.map((name, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: name\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: close,\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 1\n  }, this);\n};\n_c = Modal1;\nvar _c;\n$RefreshReg$(_c, \"Modal1\");","map":{"version":3,"names":["React","Modal","useState","Modal1","props","open","setOpen","close","console","log","input","names","map","name","idx"],"sources":["C:/my-react/src/page/Modal1.js"],"sourcesContent":["import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport { useState } from 'react';\r\n\r\n// export const Modal1 = ({open, setOpen}) => {\r\nexport const Modal1 = (props) => {\r\n\r\n    const { open, setOpen } = props;\r\n\r\n    const close = () => {\r\n        setOpen(false);\r\n    }\r\n/*\r\n    const [names, setName] = useState(['']);\r\n    const [input, setInput] = useState('');\r\n    const [input2, setInput2] = useState('');\r\n\r\n    const handleInputchange = (e) => {\r\n        setInput(e.target.value)\r\n    }\r\n\r\n    const handleInputchange2 =(e) => {\r\n        setInput2(e.target.value)\r\n        }\r\n\r\n    const handleUpload = () => {\r\n        setName(() => {\r\n            return [input];\r\n        })\r\n    }\r\n    console.log(input);\r\n    return (\r\n    <Modal isOpen={open}>\r\n        <p>제목</p>\r\n        <input type=\"text\" value={input} onChange = {handleInputchange}></input> \r\n        <p>내용</p>\r\n        <input type=\"text\" value={input2} onChange = {handleInputchange2}></input> \r\n        < button onClick= {() => {handleInputchange(); handleInputchange2();}}>Upload</button>\r\n        {names.map((name, idx) => { \r\n            return <p key={idx}>{name}</p>\r\n        })}\r\n        <button onClick={close}>X</button>\r\n    </Modal>\r\n  )\r\n}*/\r\n\r\nconsole.log(input);\r\nreturn (\r\n<Modal isOpen={open}>\r\n    <p>제목</p>\r\n    <input type=\"text\" ></input> \r\n    <p>내용</p>\r\n    <input type=\"text\"></input> \r\n    < button > Upload</button>\r\n    {names.map((name, idx) => { \r\n        return <p key={idx}>{name}</p>\r\n    })}\r\n    <button onClick={close}>X</button>\r\n</Modal>\r\n)\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,QAAQ,QAAQ,OAAO;;AAEhC;AAAA;AACA,OAAO,MAAMC,MAAM,GAAIC,KAAK,IAAK;EAE7B,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,KAAK;EAE/B,MAAMG,KAAK,GAAG,MAAM;IAChBD,OAAO,CAAC,KAAK,CAAC;EAClB,CAAC;EACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEAE,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;EAClB,oBACA,QAAC,KAAK;IAAC,MAAM,EAAEL,IAAK;IAAA,wBAChB;MAAA,UAAG;IAAE;MAAA;MAAA;MAAA;IAAA,QAAI,eACT;MAAO,IAAI,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAU,eAC5B;MAAA,UAAG;IAAE;MAAA;MAAA;MAAA;IAAA,QAAI,eACT;MAAO,IAAI,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAS,eAC3B;MAAA,UAAU;IAAO;MAAA;MAAA;MAAA;IAAA,QAAS,EACzBM,KAAK,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,KAAK;MACtB,oBAAO;QAAA,UAAcD;MAAI,GAAVC,GAAG;QAAA;QAAA;QAAA;MAAA,QAAY;IAClC,CAAC,CAAC,eACF;MAAQ,OAAO,EAAEP,KAAM;MAAA,UAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAC9B;AAER,CAAC;AAAA,KAvDYJ,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}