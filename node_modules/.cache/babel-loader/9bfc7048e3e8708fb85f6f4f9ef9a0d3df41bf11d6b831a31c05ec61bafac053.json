{"ast":null,"code":"var _jsxFileName = \"C:\\\\my-react\\\\src\\\\page\\\\Modal1.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\nimport Button from './Modal1';\nimport styled from 'styled-components';\nimport style from './Modal1.module.css';\n\n// export const Modal1 = ({open, setOpen}) => {\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Modal1 = props => {\n  _s();\n  const {\n    open,\n    setOpen,\n    initList,\n    setInitList\n  } = props;\n  // const {initList, setInitList} = props;\n\n  const close = () => {\n    setOpen(false);\n  };\n  const [input, setInput] = useState('');\n  const [input2, setInput2] = useState('');\n  const handleInputchange = e => {\n    setInput(e.target.value);\n  };\n  const handleInputchange2 = e => {\n    setInput2(e.target.value);\n  };\n  const handleUpload = () => {\n    // \"asdfsadfsdaf\"\n    // { key: value }\n    const item = {\n      pk: initList.length - 1,\n      title: input,\n      contents: input2,\n      reply: []\n    };\n    setInitList([...initList, item]);\n    close();\n    setInput(\"\");\n    setInput2(\"\");\n  };\n  const Button = styled.div`\n    padding: 30px\n    width: 200px\n    background: green;`;\n  console.log(input);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: open,\n    className: style.titleModal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.modal,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uAE00\\uC4F0\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC81C\\uBAA9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: handleInputchange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uB0B4\\uC6A9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input2,\n        onChange: handleInputchange2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        children: \"\\uB4F1\\uB85D\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: style.modalAction,\n        onClick: close,\n        children: \"\\uCC3D\\uB2EB\\uAE30 X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n/*\r\n   const [WriteUpload, setWriteUpload] = useState({\r\n       title: '',\r\n       content: ''\r\n   })\r\n\n   const getValue = e => {\r\n       const { name, value } = e.target;\r\n   }\r\nconsole.log(input);\r\n\nreturn (\r\n<Modal isOpen={open}>\r\n   <p>제목</p>\r\n   <input type=\"text\" onChange={getValue} ></input> \r\n   <p>내용</p>\r\n   <input type=\"text\"></input> \r\n   < button onClick={() => {}}> Upload</button>\r\n   {names.map((name, idx) => { \r\n       return <p key={idx}>{name}</p>\r\n   })}\r\n   <button onClick={close}>X</button>\r\n</Modal>\r\n)\r\n}\r\n*/\n_s(Modal1, \"sRQAVzWRCWERNTUTj9BpoSloyd8=\");\n_c = Modal1;\nvar _c;\n$RefreshReg$(_c, \"Modal1\");","map":{"version":3,"names":["React","Modal","useState","Button","styled","style","Modal1","props","open","setOpen","initList","setInitList","close","input","setInput","input2","setInput2","handleInputchange","e","target","value","handleInputchange2","handleUpload","item","pk","length","title","contents","reply","div","console","log","titleModal","modal","modalAction"],"sources":["C:/my-react/src/page/Modal1.js"],"sourcesContent":["import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport { useState } from 'react';\r\nimport Button from './Modal1';\r\nimport styled from 'styled-components';\r\nimport style from './Modal1.module.css';\r\n\r\n// export const Modal1 = ({open, setOpen}) => {\r\nexport const Modal1 = (props) => {\r\n\r\n    const { open, setOpen, initList, setInitList } = props;\r\n    // const {initList, setInitList} = props;\r\n\r\n    const close = () => {\r\n        setOpen(false);\r\n    }\r\n  \r\n    const [input, setInput] = useState('');\r\n    const [input2, setInput2] = useState('');\r\n\r\n    const handleInputchange = (e) => {\r\n        setInput(e.target.value)\r\n    }\r\n\r\n    const handleInputchange2 =(e) => {\r\n        setInput2(e.target.value)\r\n        }\r\n\r\n    const handleUpload = () => {\r\n        // \"asdfsadfsdaf\"\r\n        // { key: value }\r\n        const item = {\r\n            pk: initList.length - 1,\r\n            title: input,\r\n            contents : input2,\r\n            reply: []\r\n        }\r\n       setInitList([...initList, item])\r\n        close()\r\n        setInput(\"\")\r\n        setInput2(\"\")\r\n    }\r\n\r\n    const Button =styled.div`\r\n    padding: 30px\r\n    width: 200px\r\n    background: green;`\r\n\r\n\r\n    console.log(input);\r\n    return (\r\n    <Modal isOpen={open} className= {style.titleModal}>\r\n        <div className= {style.modal}>\r\n        <h2>글쓰기</h2>\r\n        \r\n        <p>제목</p>\r\n        <input type=\"text\" value={input} onChange = {handleInputchange}></input> \r\n        <p>내용</p>\r\n        <input type=\"text\" value={input2} onChange = {handleInputchange2}></input> \r\n        < button onClick= {handleUpload}>등록하기</button>\r\n        <p></p>\r\n        <button className={style.modalAction} onClick={close}>창닫기 X</button>\r\n        </div>\r\n        \r\n    </Modal>\r\n  )\r\n}\r\n\r\n /*\r\n    const [WriteUpload, setWriteUpload] = useState({\r\n        title: '',\r\n        content: ''\r\n    })\r\n\r\n    const getValue = e => {\r\n        const { name, value } = e.target;\r\n    }\r\nconsole.log(input);\r\n\r\nreturn (\r\n<Modal isOpen={open}>\r\n    <p>제목</p>\r\n    <input type=\"text\" onChange={getValue} ></input> \r\n    <p>내용</p>\r\n    <input type=\"text\"></input> \r\n    < button onClick={() => {}}> Upload</button>\r\n    {names.map((name, idx) => { \r\n        return <p key={idx}>{name}</p>\r\n    })}\r\n    <button onClick={close}>X</button>\r\n</Modal>\r\n)\r\n}\r\n*/"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,KAAK,MAAM,qBAAqB;;AAEvC;AAAA;AACA,OAAO,MAAMC,MAAM,GAAIC,KAAK,IAAK;EAAA;EAE7B,MAAM;IAAEC,IAAI;IAAEC,OAAO;IAAEC,QAAQ;IAAEC;EAAY,CAAC,GAAGJ,KAAK;EACtD;;EAEA,MAAMK,KAAK,GAAG,MAAM;IAChBH,OAAO,CAAC,KAAK,CAAC;EAClB,CAAC;EAED,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMe,iBAAiB,GAAIC,CAAC,IAAK;IAC7BJ,QAAQ,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMC,kBAAkB,GAAGH,CAAC,IAAK;IAC7BF,SAAS,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB,CAAC;EAEL,MAAME,YAAY,GAAG,MAAM;IACvB;IACA;IACA,MAAMC,IAAI,GAAG;MACTC,EAAE,EAAEd,QAAQ,CAACe,MAAM,GAAG,CAAC;MACvBC,KAAK,EAAEb,KAAK;MACZc,QAAQ,EAAGZ,MAAM;MACjBa,KAAK,EAAE;IACX,CAAC;IACFjB,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEa,IAAI,CAAC,CAAC;IAC/BX,KAAK,EAAE;IACPE,QAAQ,CAAC,EAAE,CAAC;IACZE,SAAS,CAAC,EAAE,CAAC;EACjB,CAAC;EAED,MAAMb,MAAM,GAAEC,MAAM,CAACyB,GAAI;AAC7B;AACA;AACA,uBAAuB;EAGnBC,OAAO,CAACC,GAAG,CAAClB,KAAK,CAAC;EAClB,oBACA,QAAC,KAAK;IAAC,MAAM,EAAEL,IAAK;IAAC,SAAS,EAAGH,KAAK,CAAC2B,UAAW;IAAA,uBAC9C;MAAK,SAAS,EAAG3B,KAAK,CAAC4B,KAAM;MAAA,wBAC7B;QAAA,UAAI;MAAG;QAAA;QAAA;QAAA;MAAA,QAAK,eAEZ;QAAA,UAAG;MAAE;QAAA;QAAA;QAAA;MAAA,QAAI,eACT;QAAO,IAAI,EAAC,MAAM;QAAC,KAAK,EAAEpB,KAAM;QAAC,QAAQ,EAAII;MAAkB;QAAA;QAAA;QAAA;MAAA,QAAS,eACxE;QAAA,UAAG;MAAE;QAAA;QAAA;QAAA;MAAA,QAAI,eACT;QAAO,IAAI,EAAC,MAAM;QAAC,KAAK,EAAEF,MAAO;QAAC,QAAQ,EAAIM;MAAmB;QAAA;QAAA;QAAA;MAAA,QAAS,eAC1E;QAAS,OAAO,EAAGC,YAAa;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAS,eAC9C;QAAA;QAAA;QAAA;MAAA,QAAO,eACP;QAAQ,SAAS,EAAEjB,KAAK,CAAC6B,WAAY;QAAC,OAAO,EAAEtB,KAAM;QAAA,UAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EAC9D;IAAA;IAAA;IAAA;EAAA,QAEF;AAEZ,CAAC;;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBC,GA5DYN,MAAM;AAAA,KAANA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}