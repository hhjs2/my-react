{"ast":null,"code":"var _jsxFileName = \"C:\\\\my-react\\\\src\\\\page\\\\Modal1.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Modal from 'react-modal';\nimport { useState } from 'react';\n\n// export const Modal1 = ({open, setOpen}) => {\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Modal1 = props => {\n  _s();\n  const {\n    open,\n    setOpen\n  } = props;\n  const close = () => {\n    setOpen(false);\n  };\n  const [names, setName] = useState(['']);\n  const [input, setInput] = useState('');\n  const [input2, setInput2] = useState('');\n  const handleInputchange = e => {\n    setInput(e.target.value);\n  };\n  const handleInputchange2 = e => {\n    setInput2(e.target.value);\n  };\n  const handleUpload = () => {\n    setName(() => {\n      return [input, input2];\n    });\n  };\n  console.log(input);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: open,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uAE00\\uC4F0\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC81C\\uBAA9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: handleInputchange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB0B4\\uC6A9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input2,\n      onChange: handleInputchange2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), names.map((name, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: name\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 20\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: close,\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n/*\r\n   const [WriteUpload, setWriteUpload] = useState({\r\n       title: '',\r\n       content: ''\r\n   })\r\n\n   const getValue = e => {\r\n       const { name, value } = e.target;\r\n   }\r\nconsole.log(input);\r\n\nreturn (\r\n<Modal isOpen={open}>\r\n   <p>제목</p>\r\n   <input type=\"text\" onChange={getValue} ></input> \r\n   <p>내용</p>\r\n   <input type=\"text\"></input> \r\n   < button onClick={() => {}}> Upload</button>\r\n   {names.map((name, idx) => { \r\n       return <p key={idx}>{name}</p>\r\n   })}\r\n   <button onClick={close}>X</button>\r\n</Modal>\r\n)\r\n}\r\n*/\n_s(Modal1, \"f/ml18xvzRfb1GYIlKbFzcjAffk=\");\n_c = Modal1;\nvar _c;\n$RefreshReg$(_c, \"Modal1\");","map":{"version":3,"names":["React","Modal","useState","Modal1","props","open","setOpen","close","names","setName","input","setInput","input2","setInput2","handleInputchange","e","target","value","handleInputchange2","handleUpload","console","log","map","name","idx"],"sources":["C:/my-react/src/page/Modal1.js"],"sourcesContent":["import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport { useState } from 'react';\r\n\r\n// export const Modal1 = ({open, setOpen}) => {\r\nexport const Modal1 = (props) => {\r\n\r\n    const { open, setOpen } = props;\r\n\r\n    const close = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const [names, setName] = useState(['']);\r\n    const [input, setInput] = useState('');\r\n    const [input2, setInput2] = useState('');\r\n\r\n    const handleInputchange = (e) => {\r\n        setInput(e.target.value)\r\n    }\r\n\r\n    const handleInputchange2 =(e) => {\r\n        setInput2(e.target.value)\r\n        }\r\n\r\n    const handleUpload = () => {\r\n        setName(() => {\r\n            return [input, input2];\r\n        })\r\n    }\r\n    console.log(input);\r\n    return (\r\n    <Modal isOpen={open}>\r\n        <h1>글쓰기</h1>\r\n        <p>제목</p>\r\n        <input type=\"text\" value={input} onChange = {handleInputchange}></input> \r\n        <p>내용</p>\r\n        <input type=\"text\" value={input2} onChange = {handleInputchange2}></input> \r\n        < button onClick= {handleUpload}>Upload</button>\r\n        {names.map((name, idx) => { \r\n            return <p key={idx}>{name}</p>\r\n        })}\r\n        <button onClick={close}>X</button>\r\n    </Modal>\r\n  )\r\n}\r\n\r\n /*\r\n    const [WriteUpload, setWriteUpload] = useState({\r\n        title: '',\r\n        content: ''\r\n    })\r\n\r\n    const getValue = e => {\r\n        const { name, value } = e.target;\r\n    }\r\nconsole.log(input);\r\n\r\nreturn (\r\n<Modal isOpen={open}>\r\n    <p>제목</p>\r\n    <input type=\"text\" onChange={getValue} ></input> \r\n    <p>내용</p>\r\n    <input type=\"text\"></input> \r\n    < button onClick={() => {}}> Upload</button>\r\n    {names.map((name, idx) => { \r\n        return <p key={idx}>{name}</p>\r\n    })}\r\n    <button onClick={close}>X</button>\r\n</Modal>\r\n)\r\n}\r\n*/"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,QAAQ,QAAQ,OAAO;;AAEhC;AAAA;AACA,OAAO,MAAMC,MAAM,GAAIC,KAAK,IAAK;EAAA;EAE7B,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,KAAK;EAE/B,MAAMG,KAAK,GAAG,MAAM;IAChBD,OAAO,CAAC,KAAK,CAAC;EAClB,CAAC;EAED,MAAM,CAACE,KAAK,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EACvC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMY,iBAAiB,GAAIC,CAAC,IAAK;IAC7BJ,QAAQ,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMC,kBAAkB,GAAGH,CAAC,IAAK;IAC7BF,SAAS,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB,CAAC;EAEL,MAAME,YAAY,GAAG,MAAM;IACvBV,OAAO,CAAC,MAAM;MACV,OAAO,CAACC,KAAK,EAAEE,MAAM,CAAC;IAC1B,CAAC,CAAC;EACN,CAAC;EACDQ,OAAO,CAACC,GAAG,CAACX,KAAK,CAAC;EAClB,oBACA,QAAC,KAAK;IAAC,MAAM,EAAEL,IAAK;IAAA,wBAChB;MAAA,UAAI;IAAG;MAAA;MAAA;MAAA;IAAA,QAAK,eACZ;MAAA,UAAG;IAAE;MAAA;MAAA;MAAA;IAAA,QAAI,eACT;MAAO,IAAI,EAAC,MAAM;MAAC,KAAK,EAAEK,KAAM;MAAC,QAAQ,EAAII;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAS,eACxE;MAAA,UAAG;IAAE;MAAA;MAAA;MAAA;IAAA,QAAI,eACT;MAAO,IAAI,EAAC,MAAM;MAAC,KAAK,EAAEF,MAAO;MAAC,QAAQ,EAAIM;IAAmB;MAAA;MAAA;MAAA;IAAA,QAAS,eAC1E;MAAS,OAAO,EAAGC,YAAa;MAAA,UAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAS,EAC/CX,KAAK,CAACc,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,KAAK;MACtB,oBAAO;QAAA,UAAcD;MAAI,GAAVC,GAAG;QAAA;QAAA;QAAA;MAAA,QAAY;IAClC,CAAC,CAAC,eACF;MAAQ,OAAO,EAAEjB,KAAM;MAAA,UAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAC9B;AAEZ,CAAC;;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBC,GA1CYJ,MAAM;AAAA,KAANA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}