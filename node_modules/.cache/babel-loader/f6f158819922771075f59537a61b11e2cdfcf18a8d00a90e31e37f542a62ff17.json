{"ast":null,"code":"var _jsxFileName = \"C:\\\\my-react\\\\src\\\\page\\\\Detail.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport Comments from '../components/Comments';\nimport styly from './Detail.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Detail = () => {\n  _s();\n  const location = useLocation();\n  //locaition.state로 전달 받은 파라미터를 취득 가능\n  const item = location.state.data;\n  //item 변수에 location.state에서 date(파라미터) 취득\n\n  // 해당 게시글의 댓글 리스트\n  const [initComment, setInitComment] = React.useState(item.reply);\n  // item을 location함수를 이용해서 post 페이지에 있는 값을 가져와줌\n  const [comment, setComment] = React.useState(\"\");\n  // 댓글 초기값을 빈함수로 놔두고 댓글 함수 설정\n  // const number = Math.floor(Math.random() * initComment.length);\n  //리스트의 컨텐츠의 갯수\n  //const replynumber = list.reply.map((replynumbers) => {replynumbers});\n  //replynumber.length  \n\n  const save = temp => {\n    const a = {\n      comment: temp\n    };\n    setInitComment([...initComment, a]);\n    setComment(\"\");\n  };\n  const remove = () => {\n    // const d = setInitComment.filter\n  };\n  // 댓글 삭제\n\n  // 추첨하기 함수\n  const choose = () => {\n    const number = Math.floor(Math.random() * initComment.length);\n    console.log(number);\n    alert(`당첨자 댓글은 ${initComment[number].comment} 입니다.`);\n    setInitComment(initComment.map((data, index) => {\n      return index === number ? {\n        ...data,\n        highlight: true\n      } : data;\n    }));\n  };\n  // onChange 함수를 이용해서 이벤트 값을 setComment에 넣기\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styly.big,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styly.content,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.contents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: comment,\n        className: styly.input,\n        onChange: e => {\n          setComment(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          save(comment);\n        },\n        children: \"\\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: remove,\n        children: \"\\uB313\\uAE00 \\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styly.buttonCh,\n        onClick: choose,\n        children: \" \\uB313\\uAE00 \\uCD94\\uCCA8\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), initComment.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styly.reply,\n            children: [\".\", /*#__PURE__*/_jsxDEV(Comments, {\n              item: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)\n        }, void 0, false);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n// 변수를 설정을 하고 변수가 뭔지 적어줘야함\n_s(Detail, \"qnB8kU9L8aM+GAi9jZo9BPF3Ib0=\", false, function () {\n  return [useLocation];\n});\n_c = Detail;\nexport default Detail;\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["React","useLocation","Comments","styly","Detail","location","item","state","data","initComment","setInitComment","useState","reply","comment","setComment","save","temp","a","remove","choose","number","Math","floor","random","length","console","log","alert","map","index","highlight","big","title","content","contents","input","e","target","value","buttonCh"],"sources":["C:/my-react/src/page/Detail.js"],"sourcesContent":["\r\n\r\nimport React from 'react'\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Comments from '../components/Comments';\r\nimport styly from './Detail.module.css';\r\nexport const Detail = () => {\r\n    const location = useLocation();\r\n //locaition.state로 전달 받은 파라미터를 취득 가능\r\n    const item = location.state.data;\r\n   //item 변수에 location.state에서 date(파라미터) 취득\r\n\r\n    // 해당 게시글의 댓글 리스트\r\n    const [initComment, setInitComment] = React.useState(item.reply);\r\n    // item을 location함수를 이용해서 post 페이지에 있는 값을 가져와줌\r\n    const [comment, setComment] = React.useState(\"\");\r\n    // 댓글 초기값을 빈함수로 놔두고 댓글 함수 설정\r\n    // const number = Math.floor(Math.random() * initComment.length);\r\n    //리스트의 컨텐츠의 갯수\r\n    //const replynumber = list.reply.map((replynumbers) => {replynumbers});\r\n    //replynumber.length  \r\n\r\n    const save = (temp) => {\r\n        const a = {\r\n            comment: temp\r\n         }\r\n\r\n        setInitComment([...initComment, a])\r\n        setComment(\"\")\r\n    }\r\n\r\n    const remove = () => {\r\n        // const d = setInitComment.filter\r\n    }\r\n    // 댓글 삭제\r\n    \r\n    // 추첨하기 함수\r\n    const choose = () => {\r\n        const number = Math.floor(Math.random() * initComment.length);\r\n        console.log(number)\r\n        alert(`당첨자 댓글은 ${initComment[number].comment} 입니다.`)\r\n        setInitComment(\r\n            initComment.map((data, index) => {\r\n                return index === number ? { ...data, highlight: true } : data\r\n            })\r\n        )\r\n    }\r\n            // onChange 함수를 이용해서 이벤트 값을 setComment에 넣기\r\n  return (\r\n    <>\r\n    <div className={styly.big}>\r\n        <h1 >{item.title}</h1>\r\n        <hr></hr>\r\n        <div className={styly.content}>\r\n           <p>{item.contents}</p>\r\n        </div>\r\n        \r\n        <hr />\r\n        <input value={comment} className={styly.input} onChange={(e)=>{setComment(e.target.value)}} />\r\n        <button onClick={() => {save(comment)}}>확인</button>\r\n        <p></p>\r\n        <button onClick={remove}>댓글 삭제</button>\r\n        <button className={styly.buttonCh} onClick={choose}> 댓글 추첨하기</button> \r\n      \r\n\r\n        {/* \r\n        <></> === <div>\r\n         */}\r\n        {initComment.map((item, index) => {\r\n            return (\r\n                <>\r\n                <p className={ styly.reply}> \r\n                 .\r\n                 <Comments item={item} />\r\n                </p>\r\n                 </>\r\n            )\r\n        })}\r\n    </div> \r\n    </>\r\n  )\r\n}\r\n// 변수를 설정을 하고 변수가 뭔지 적어줘야함\r\n\r\nexport default Detail"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}